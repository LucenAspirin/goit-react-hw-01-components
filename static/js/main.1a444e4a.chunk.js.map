{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/container/Container.module.css","img/notImage.png","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/container/Container.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","description","src","alt","item","label","quantity","followers","views","likes","defaultProps","defaultImage","rand","Math","floor","random","Statistics","title","statistics","stat_list","map","id","percentage","style","backgroundColor","Container","children","st","container","FriendList","friends","friend","isOnline","online","offline","width","TransactionHistory","items","class","transaction","headRow","type","amount","currency","bodyRow","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a444e4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1mo5P\",\"description\":\"Profile_description__3TFJd\",\"avatar\":\"Profile_avatar__2IoeP\",\"name\":\"Profile_name__2z61n\",\"tag\":\"Profile_tag__323Cx\",\"location\":\"Profile_location__1wXVd\",\"stats\":\"Profile_stats__2R04G\",\"item\":\"Profile_item__1MPAm\",\"label\":\"Profile_label__3l_4G\",\"quantity\":\"Profile_quantity__3uzih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2WRbN\",\"item\":\"Statistics_item__1C33j\",\"title\":\"Statistics_title__1RpPn\",\"stat_list\":\"Statistics_stat_list__17lBC\",\"label\":\"Statistics_label__xy44e\",\"percentage\":\"Statistics_percentage__3-UPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendList_friend__15AWX\",\"item\":\"FriendList_item__3TcU9\",\"avatar\":\"FriendList_avatar__2CMSD\",\"online\":\"FriendList_online__3jVwu\",\"offline\":\"FriendList_offline__2foG9\",\"name\":\"FriendList_name__1fi0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__260xz\",\"bodyRow\":\"TransactionHistory_bodyRow__3bUuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2G5MC\"};","export default __webpack_public_path__ + \"static/media/notImage.0e049a38.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport defaultImage from \"../../img/notImage.png\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n      <ul className={styles.stats}>\r\n        <li className={styles.item}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li >\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultImage,\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      <ul className={styles.stat_list}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            className={styles.item}\r\n            key={id}\r\n            style={{ backgroundColor: `rgb(${rand()},${rand()},${rand()})` }}\r\n          >\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nfunction rand() {\r\n  return Math.floor(Math.random() * 220);\r\n}\r\n\r\nexport default Statistics;","  \r\nimport st from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={st.container}>{children}</div>;\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friend}>\r\n      {friends.map(({ avatar, name, id, isOnline }) => (\r\n        <li className={styles.item} key={id}>\r\n          <span className={isOnline ? `${styles.online}` : `${styles.offline}`}></span>\r\n          <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n          <p className={styles.name}>{name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\nexport default FriendList;","import React from \"react\"\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table class={styles.transaction}>\r\n      <thead>\r\n        <tr className={styles.headRow}>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id} className={styles.bodyRow}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;","import Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport user from \"./components/Data/user.json\";\r\nimport statisticalData from \"./components/Data/statistical-data.json\";\r\nimport Container from \"./components/container/Container\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport friends from \"./components/Data/friends.json\"\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\nimport transactions from \"./components/Data/transactions.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      \r\n      <Profile {...user} />\r\n      <Statistics title=\"Upload stats:\" stats={statisticalData} />\r\n      <Statistics stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}